<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.integration">Integrations</Crumb::Item>
	<Crumb::Item @link="docs.integration.libraries">Libraries</Crumb::Item>
	<Crumb::Item @link="docs.integration.libraries.java">Java</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2>
		<Devicon @size="50" @type="java" />
		Jara driver for <img inline src="/static/img/text.svg" alt="SurrealDB" /></h2>
	<p>
		The SurrealDB library for Java enables simple and advanced querying of a remote database from client or
		server-side code.
		Remote connections automatically reconnect when the connection is terminated.
	</p>
	<p>To contribute to this documentation,
		<Link @link={{github}}>
		edit this file on GitHub</Link>.
	</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Install the library</h3>
	<p>
		You can add the driver to your project like you would any standard dependency.
	</p>
	<Layout::Table filled>
		<table>
			<tbody>
			<tr>
				<td>GroupID</td>
				<td>com.surrealdb</td>
			</tr>
			<tr>
				<td>Artifact</td>
				<td>surrealdb-driver</td>
			</tr>
			<tr>
				<td>Version</td>
				<td>0.1.0</td>
			</tr>
			</tbody>
		</table>
	</Layout::Table>

	<Layout::Gap tiny />

	<p>To include the driver in your maven project it is sufficient to add the following dependency to your dependency
		block.</p>
	<Code @name="docs/integration/libraries/java/maven.xml" />

	<p>To include the driver in your gradle project, add the following</p>
	<Code @name="docs/integration/libraries/java/gradle.groovy" />
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Connect</h3>
	<p>Below is a snippet of code that demonstrates how you can connect to SurrealDB.</p>
	<Code @name="docs/integration/libraries/java/basic.java"/>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Library methods</h3>
	<p>The Java library comes with a number of built-in functions.</p>
</Layout::Text>


<Layout::Gap tiny />

<Layout::Table filled>
	<table>
		<thead>
		<tr>
			<th w-40>Function</th>
			<th w-60>Description</th>
		</tr>
		</thead>
		<tbody>
		<tr>
			<td>
				<a href="#conninit">
					<Ascua::Prism::Inline @language="java" @code="new SurrealWebSocketConnection(host, port, tls)" />
				</a>
				<l faint r>static</l>
			</td>
			<td>
				Creates a new connection instance.
				The connection will upgrade the protocol to WebSockets, providing better performance and functionality.
				This class is used to connect to the database but is not the driver.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#connect">
					<Ascua::Prism::Inline @language="java" @code="SurrealWebSocketConnection.connect(timeout)" />
				</a>
			</td>
			<td>
				Initiates the connection to the database.
				This is necessary before the driver can be used.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#init">
					<Ascua::Prism::Inline @language="java" @code="new SyncSurrealDriver(conn)" />
				</a>
				<l faint r>static</l>
			</td>
			<td>
				Creates an instance of the driver to interact with the database remotely.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#signin">
					<Ascua::Prism::Inline @language="java" @code="driver.signIn(user, pass)" />
				</a>
			</td>
			<td>
				Sign in to the database.
				This is a necessary step before using the database.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#signup">
					<Ascua::Prism::Inline @language="java"
										  @code="driver.signUp(namespace, database, scope, email, password, marketing, tags)" />
				</a>
			</td>
			<td>
				Signs up a user to a specific authentication scope.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#authenticate">
					<Ascua::Prism::Inline @language="java" @code="driver.authenticate(token)" />
				</a>
			</td>
			<td>
				Authenticates the current connection with a JWT token.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#invalidate">
					<Ascua::Prism::Inline @language="java" @code="driver.invalidate()" />
				</a>
			</td>
			<td>
				Invalidates the authentication for the current connection.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#use">
					<Ascua::Prism::Inline @language="java" @code="driver.use(namespace, database)" />
				</a>
			</td>
			<td>
				Switch to a specific namespace and database.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#let">
					<Ascua::Prism::Inline @language="java" @code="driver.let(key, value)" />
				</a>
			</td>
			<td>
				Set a variable that can be used throughout the database session.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#query">
					<Ascua::Prism::Inline @language="java" @code="driver.query(query, args, rowType)" />
				</a>
			</td>
			<td>
				Runs a set of SurrealQL statements against the database.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#select">
					<Ascua::Prism::Inline @language="java" @code="driver.select(thing, rowType)" />
				</a>
			</td>
			<td>
				Selects all records in a table, or a specific record.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#create">
					<Ascua::Prism::Inline @language="java" @code="driver.create(thing, data)" />
				</a>
			</td>
			<td>
				Creates a record in the database.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#update">
					<Ascua::Prism::Inline @language="java" @code="driver.update(thing, data)" />
				</a>
			</td>
			<td>
				Updates all records in a table, or a specific record.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#change">
					<Ascua::Prism::Inline @language="java" @code="driver.change(thing, data, rowType)" />
				</a>
			</td>
			<td>
				Change all records in a table, or a specific record.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#patch">
					<Ascua::Prism::Inline @language="java" @code="driver.patch(thing, patches)" />
				</a>
			</td>
			<td>
				Patch all records in a table, or a specific record.
			</td>
		</tr>
		<tr>
			<td>
				<a href="#delete">
					<Ascua::Prism::Inline @language="java" @code="driver.delete(thing)" />
				</a>
			</td>
			<td>
				Deletes all records, or a specific record.
			</td>
		</tr>

		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<Layout::Group {{waypoint "conninit"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="new SurrealWebSocketConnection(host, port, tls)" />
		</h3>
		<p>Initiates a connection instance that can be used to make a connection to a SurrealDB instance.</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>host</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The database endpoint to connect to.
					</td>
				</tr>
				<tr>
					<td>
						<code>port</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The database port to connect to.
					</td>
				</tr>
				<tr>
					<td>
						<code>tls</code>
						<l yellow r>Required</l>
					</td>
					<td>
						Whether to use TLS or not.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "connect"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="SurrealWebSocketConnection.connect(timeout)" />
		</h3>
		<p>Connects to the SurrealDB instance within the timeout of seconds.</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>timeout</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The time to wait to connect before erroring, in seconds.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "init"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="new SyncSurrealDriver(conn)" />
		</h3>
		<p>
			Creates an instance of the synchronous driver.
			There is an asynchronous counterpart - AsyncSurrealDriver that fills the same functionality.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>conn</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The connection to the database.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "signin"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.signIn(user, pass)" />
		</h3>
		<p>
			Sign in to the database.
			This is a necessary step before using the database.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>user</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The user used for authentication.
					</td>
				</tr>
				<tr>
					<td>
						<code>pass</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The password used for authentication.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "signup"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java"
								  @code="driver.signUp(namespace, database, scope, email, password)" />
		</h3>
		<p>
			Signs up a user to a specific authentication scope.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>namespace</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The namespace to sign up for.
					</td>
				</tr>
				<tr>
					<td>
						<code>database</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The database to sign up for.
					</td>
				</tr>
				<tr>
					<td>
						<code>scope</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The scope to sign up for.
					</td>
				</tr>
				<tr>
					<td>
						<code>email</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The email for sign up.
					</td>
				</tr>
				<tr>
					<td>
						<code>password</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The password used for authentication.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "authenticate"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.authenticate(token)" />
		</h3>
		<p>
			Authenticates the current connection with a JWT token.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>token</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The JWT authentication token.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "invalidate"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.invalidate()" />
		</h3>
		<p>
			Invalidates the authentication for the current connection.
		</p>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "use"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.use(namespace, database)" />
		</h3>
		<p>
			Switch to a specific namespace and database.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>namespace</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The namespace to use throughout the database session.
					</td>
				</tr>
				<tr>
					<td>
						<code>database</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The database to use throughout the database session.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "let"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.let(key, value)" />
		</h3>
		<p>
			Set a variable that can be used throughout the database session.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>key</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The key of the variable being used within queries.
					</td>
				</tr>
				<tr>
					<td>
						<code>value</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The value of the variable being used within queries.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "query"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.query(query, args, rowType)" />
		</h3>
		<p>
			Runs a set of SurrealQL statements against the database.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>query</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The database endpoint to connect to.
					</td>
				</tr>
				<tr>
					<td>
						<code>args</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The arguments passed to the query in place of named parameters.
					</td>
				</tr>
				<tr>
					<td>
						<code>rowType</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The class of the return type of the response.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "select"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.select(thing, rowType)" />
		</h3>
		<p>
			Selects all records in a table, or a specific record.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>thing</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The thing we are selecting, table or specific rows.
					</td>
				</tr>
				<tr>
					<td>
						<code>rowType</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The class of the expected result.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "create"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.create(thing, data)" />
		</h3>
		<p>
			Creates a record in the database.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>thing</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The thing being created - table or specific records.
					</td>
				</tr>
				<tr>
					<td>
						<code>data</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The data being used for creation.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "update"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.update(thing, data)" />
		</h3>
		<p>
			Updates all records in a table, or a specific record.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>thing</code>
						<l yellow r>Required</l>
					</td>
					<td>
						What is being updated - table or specific records.
					</td>
				</tr>
				<tr>
					<td>
						<code>data</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The data being replaced in the record.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "change"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.change(thing, data, rowType)" />
		</h3>
		<p>
			Change all records in a table, or a specific record.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>thing</code>
						<l yellow r>Required</l>
					</td>
					<td>
						What is being changed - table or records.
					</td>
				</tr>
				<tr>
					<td>
						<code>data</code>
						<l yellow r>Required</l>
					</td>
					<td>
						What data is used to apply the change.
					</td>
				</tr>
				<tr>
					<td>
						<code>rowType</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The returned type of the query.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "patch"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.patch(thing, patches)" />
		</h3>
		<p>
			Patch all records in a table, or a specific record.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>thing</code>
						<l yellow r>Required</l>
					</td>
					<td>
						What is being patched - table or records.
					</td>
				</tr>
				<tr>
					<td>
						<code>patches</code>
						<l yellow r>Required</l>
					</td>
					<td>
						The list of patches to apply.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "delete"}}>

	<Layout::Text text-l text-f>
		<h3>
			<Ascua::Prism::Inline @language="java" @code="driver.delete(thing)" />
		</h3>
		<p>
			Deletes all records, or a specific record.
		</p>
		<Layout::Table>
			<table>
				<thead>
				<tr>
					<th w-40>Arguments</th>
					<th w-60>Description</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>
						<code>thing</code>
						<l yellow r>Required</l>
					</td>
					<td>
						What is being deleted - table or selected records.
					</td>
				</tr>
				</tbody>
			</table>
		</Layout::Table>
	</Layout::Text>

</Layout::Group>

<Layout::Gap large />
